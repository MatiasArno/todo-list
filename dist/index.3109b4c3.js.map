{"mappings":"AAGA,MAAMA,EAAS,CACX,CACIC,KAAM,SACNC,UCND,SAAkBC,GAErB,MAAMC,EAAMC,SAASC,cAAc,O,OAEnCF,EAAIG,MAAMC,QAAU,OACpBJ,EAAIG,MAAME,cAAgB,SAC1BL,EAAIG,MAAMG,eAAiB,gBAC3BN,EAAIG,MAAMI,OAAS,OAEnBP,EAAIQ,UAAY,0H,IDDhB,CACIX,KAAM,YACNC,UEVD,SAAqBC,GAExB,MAAMC,EAAMC,SAASC,cAAc,O,OAEnCF,EAAIQ,UAAY,mC,KCJpB,MAAMC,EAAQ,CAEVC,KAAM,CACFC,KAAM,IAGVC,UAAW,GAEXC,WACI,OAAOC,KAAKJ,IAChB,EAEAK,SAASC,GACLC,QAAQC,IAAI,oBAAqBF,GACjCF,KAAKJ,KAAOM,EAEZ,IAAI,MAAMG,KAAML,KAAKF,UACjBO,GAER,EAEAC,UAAUC,GAENP,KAAKF,UAAUU,KAAKD,GACpBJ,QAAQC,IAAI,wBAAqBG,UACrC,EAEAE,QAAQC,GACJP,QAAQC,IAAI,sBAAmBM,UAE/B,MAAMC,EAAeX,KAAKD,WAC1BY,EAAad,KAAKW,KAAKE,GACvBV,KAAKC,SAASU,EAClB,IHnBG,SAAoBC,GAEvB,SAASC,EAAK9B,GACV+B,QAAQC,UAAU,CAAC,EAAG,GAAIhC,GAC1BiC,EAAYjC,EAChB,CAEA,SAASiC,EAAYC,GAEjBd,QAAQC,IAAI,uBAAoBa,UAEhC,IAAI,MAAMC,KAAKpC,EAEX,GAAGoC,EAAEnC,KAAKoC,KAAKF,GAAQ,CACnB,MAAMG,EAAKF,EAAElC,UAAU,CAAC6B,KAAMA,IAC9BD,EAAUS,YAAYC,SACtBV,EAAUW,YAAYH,EAC1B,CAER,CAEqB,KAArBI,SAASC,SAAkBZ,EAAK,SAAWG,EAAYQ,SAASC,UAChEC,OAAOC,WAAa,IAAMX,EAAYQ,SAASC,SACnD,EI7BI,CAFatC,SAASyC,cAAc,UCJjC,WAEH,MAAMC,UAAoBC,YAEtBC,OAAS/B,KAAKgC,aAAa,CAACC,KAAM,SAElCC,cACIC,QACAnC,KAAKoC,QACT,CAEAC,oBACiBrC,KAAK+B,OAAOH,cAAc,kBAClCU,iBAAiB,UAAWC,IAC7BA,EAAEC,iBACF,MAAMC,EAAcF,EAAEG,OACtB/C,EAAMc,QAAQgC,EAAY/B,KAAKiC,OAC/BF,EAAY/B,KAAKiC,MAAQ,KAEjC,CAEAP,SACI,MAAM/C,EAAQF,SAASC,cAAc,SAErCC,EAAMuD,YAAc,usB,yWDjB5B,GEPG,WAEH,MAAMC,UAAkBf,YACpBC,OAAS/B,KAAKgC,aAAa,CAAEC,KAAM,SACnCC,cACIC,OACJ,CAEAE,oBACI1C,EAAMW,WAAU,KACZN,KAAKoC,QAAM,GAEnB,CAEAA,SACI,MAAMvC,EAAOF,EAAMI,WAAWF,KACxBiD,EAAO,IAAIC,KACX1D,EAAQF,SAASC,cAAc,SAErCC,EAAMuD,YAAc,+tC,oiBFX5B","sources":["src/router.ts","src/scenes/home/index.ts","src/scenes/history/index.ts","src/state.ts","src/index.ts","src/components/add-item-form/index.ts","src/components/items-list/index.ts"],"sourcesContent":["import {initHome} from \"./scenes/home\";\r\nimport {initHistory} from \"./scenes/history\";\r\n\r\nconst routes = [\r\n    {\r\n        path: /\\/home/,\r\n        component: initHome\r\n    },\r\n    {\r\n        path: /\\/history/,\r\n        component: initHistory\r\n    }\r\n];\r\n\r\nexport function initRouter(container: HTMLElement) {\r\n\r\n    function goTo(path: string) {\r\n        history.pushState({}, \"\", path);\r\n        handleRoute(path);\r\n    }\r\n\r\n    function handleRoute(route: string) {\r\n    \r\n        console.log(`handleRoute -->| ${route} |<--`);\r\n    \r\n        for(const r of routes) {\r\n    \r\n            if(r.path.test(route)) {\r\n                const el = r.component({goTo: goTo});    \r\n                container.firstChild?.remove();    \r\n                container.appendChild(el);\r\n            }\r\n        }\r\n    }\r\n\r\n    location.pathname == \"/\" ? goTo(\"/home\") : handleRoute(location.pathname);\r\n    window.onpopstate = () => handleRoute(location.pathname);\r\n}\r\n","export function initHome(params: any) {\r\n\r\n    const div = document.createElement(\"div\");\r\n\r\n    div.style.display = \"flex\";\r\n    div.style.flexDirection = \"column\";\r\n    div.style.justifyContent = \"space-between\";\r\n    div.style.height = \"100%\";\r\n\r\n    div.innerHTML = `\r\n        <items-list class=\"items-list\"></items-list>\r\n        <add-item-form class=\"add-items\"></add-item-form>\r\n    `;\r\n\r\n    // const btnEl = div.querySelector(\".btn-start\") as HTMLElement;\r\n    // btnEl.addEventListener(\"click\", () => params.goTo(\"/step-1\"));\r\n\r\n    return div;    \r\n}","export function initHistory(params: any) {\r\n\r\n    const div = document.createElement(\"div\");\r\n\r\n    div.innerHTML = `\r\n        <h1>HISTORY</h1>\r\n    `;\r\n\r\n    // const btnEl = div.querySelector(\".btn-start\") as HTMLElement;\r\n    // btnEl.addEventListener(\"click\", () => params.goTo(\"/step-1\"));\r\n\r\n    return div;    \r\n}","const state = {\r\n\r\n    data: {\r\n        list: []\r\n    },\r\n\r\n    listeners: [],\r\n\r\n    getState() {\r\n        return this.data;\r\n    },\r\n\r\n    setState(newState: Object) {\r\n        console.log(\"Recibí datos ==> \", newState);\r\n        this.data = newState;\r\n\r\n        for(const cb of this.listeners) {                   // Recorre las funciones de listeners y las ejecuta.\r\n            cb();                           \r\n        }\r\n    },\r\n\r\n    subscribe(callback: (any: any) => any) {                // SUBSCRIPCION AL STATE PARA ACTUALIZAR LOS COMPONENTES ASOCIADOS.\r\n                                                            // Recibe una función llamada \"callback\" por convención.\r\n        this.listeners.push(callback);                      // Genero un array de funciones.\r\n        console.log(`NEW CALLBACK -->| ${callback} |<---`);\r\n    },\r\n\r\n    addItem(item: any) {\r\n        console.log(`ITEM ADDED -->| ${item} |<--`);\r\n\r\n        const currentState = this.getState();\r\n        currentState.list.push(item);\r\n        this.setState(currentState);\r\n    }\r\n};\r\n\r\nexport { state };","import { initRouter } from \"./router\";\r\nimport { initFormEl } from \"./components/add-item-form\";\r\nimport { initItemsListEl } from \"./components/items-list\";\r\n\r\n(function main() {\r\n\r\n    const root = document.querySelector(\".root\") as HTMLElement;\r\n\r\n    initRouter(root);\r\n    initFormEl();\r\n    initItemsListEl();\r\n})();","import { state } from \"../../state\";\r\n\r\nexport function initFormEl() {\r\n\r\n    class AddItemForm extends HTMLElement {\r\n\r\n        shadow = this.attachShadow({mode: 'open'});\r\n\r\n        constructor() {\r\n            super();\r\n            this.render();\r\n        }\r\n\r\n        connectedCallback() {\r\n            const form = this.shadow.querySelector(\".add-item-form\") as HTMLFormElement;\r\n            form.addEventListener(\"submit\", (e) => {\r\n                e.preventDefault();\r\n                const formContent = e.target as HTMLFormElement;\r\n                state.addItem(formContent.item.value);\r\n                formContent.item.value = \"\";\r\n            });\r\n        }\r\n\r\n        render() {\r\n            const style = document.createElement(\"style\");\r\n\r\n            style.textContent = `\r\n                * {\r\n                    box-sizing: border-box;\r\n                    border: none;\r\n                    margin: 0;\r\n                    padding: 0;\r\n                }\r\n                .add-item-form {\r\n                    display: flex;\r\n                    height: 100%;\r\n                }\r\n\r\n                .add-item-field {\r\n                    padding: 0 18px;\r\n                    width: calc(100% - 63px);\r\n                }\r\n\r\n                .add-item-btn {\r\n                    width: 63px;\r\n                    height: 100%;\r\n                    background-color: tomato;\r\n                    color: white;\r\n                    font-size: 3.6em;\r\n                }\r\n            `;\r\n            \r\n            this.shadow.innerHTML = `\r\n                <form class=\"add-item-form\">\r\n                    <input type=\"text\" name=\"item\" class=\"add-item-field\" placeholder=\"Type new item...\">\r\n                    <button type=\"submit\" class=\"add-item-btn\">+</button>\r\n                </form>\r\n            `;\r\n            \r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n\r\n    customElements.define(\"add-item-form\", AddItemForm);\r\n}","import { state } from \"../../state\";\r\n\r\nexport function initItemsListEl() {\r\n\r\n    class ItemsList extends HTMLElement {\r\n        shadow = this.attachShadow({ mode: \"open\" });\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        connectedCallback() {                   // Se invoca cada vez que el custom element es añadido un documento.\r\n            state.subscribe(() => {\r\n                this.render();\r\n            });\r\n        }\r\n\r\n        render() {\r\n            const list = state.getState().list;\r\n            const date = new Date();\r\n            const style = document.createElement(\"style\");\r\n\r\n            style.textContent = `\r\n            * {\r\n                box-sizing: border-box;\r\n            }\r\n            \r\n            .items-list-item {\r\n                display: flex;\r\n                width: 100%;\r\n                height: 63px;\r\n                padding: 0;\r\n                margin: 0 0 7.2px 0;\r\n                font-family: 'Roboto', sans-serif;\r\n                background-color: white;\r\n            }\r\n\r\n            .check {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                width: 63px;\r\n                height: 100%;\r\n                background-color: steelblue;\r\n                color: white;\r\n                font-size: 2.07em;\r\n                font-weight: 900;\r\n            }\r\n\r\n            .item {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                padding: 0 0 0 18px;\r\n                font-weight: bold;\r\n            }\r\n\r\n            .date {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                padding: 0 18px 0 0;\r\n                text-align: end;\r\n                margin-left: auto;\r\n            }\r\n            `;\r\n\r\n            this.shadow.innerHTML = `\r\n                ${list.map((item: any) => {\r\n                return `<div class=\"items-list-item\">\r\n                                <div class=\"check\">✓</div>\r\n                                <p class=\"item\">${item}</p>\r\n                                <p class=\"date\">${`${date.getDate()}:${date.getMonth() + 1}:${date.getFullYear()} <br> \r\n                                                    ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`}</p>\r\n                            </div>`\r\n            }).join(\"\")}\r\n            `;\r\n\r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n\r\n    customElements.define(\"items-list\", ItemsList);\r\n}"],"names":["$e817d3341cf3ea9c$var$routes","path","component","params","div","document","createElement","style","display","flexDirection","justifyContent","height","innerHTML","$0b89d474933103bc$export$ca000e230c0caa3e","data","list","listeners","getState","this","setState","newState","console","log","cb","subscribe","callback","push","addItem","item","currentState","container","goTo","history","pushState","handleRoute","route","r","test","el","firstChild","remove","appendChild","location","pathname","window","onpopstate","querySelector","AddItemForm","HTMLElement","shadow","attachShadow","mode","constructor","super","render","connectedCallback","addEventListener","e","preventDefault","formContent","target","value","textContent","ItemsList","date","Date"],"version":3,"file":"index.3109b4c3.js.map"}